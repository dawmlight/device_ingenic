#Copyright (c) 2020 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/lite/config/component/lite_component.gni")

lite_component("bluetooth") {
  features = [ "$ohos_vendor_adapter_dir/hals/communication/bluetooth:btservice" ]
}

rpath = rebase_path(root_out_dir, ohos_root_path)
shared_library("btservice") {
  sources = [
    "frameworks/ohos_bt.c",
    "frameworks/source/app_common/app_dm.c",
    "frameworks/source/app_common/app_utils.c",
    "frameworks/source/app_common/app_disc.c",
    "frameworks/source/app_common/app_mgt.c",
    "frameworks/source/app_common/app_wav.c",
    "frameworks/source/app_common/app_mutex.c",
    "frameworks/source/app_common/app_link.c",
    "frameworks/source/app_common/app_thread.c",
    "frameworks/source/app_common/app_playlist.c",
    "frameworks/source/app_common/nanoxml.c",
    "frameworks/source/app_common/app_services.c",
    "frameworks/source/app_common/app_xml_utils.c",
    "frameworks/source/app_common/app_xml_param.c",
    "frameworks/source/app_manager.c",
    "frameworks/source/app_avk.c",
    "frameworks/source/app_hs.c",
    "frameworks/source/app_dg.c",
    "frameworks/source/app_av.c",
    "frameworks/source/app_ag.c",
    "frameworks/source/app_ble.c",
    "frameworks/source/app_ble_server.c",
    "frameworks/protocol/SppProtocol.cpp",
    "frameworks/protocol/UnBindModule.cpp",
    "frameworks/protocol/SyncModule.cpp",
    "frameworks/protocol/SyncDataTools.cpp",
    "frameworks/protocol/SyncData.cpp",
    "frameworks/sdk/ThirdPartyServer.cpp",
    "frameworks/sdk/BluetoothServer.cpp",
    "frameworks/protocol/DBHelper.cpp",
    "frameworks/sdk/HilinkServer.cpp",
    "frameworks/ble/BleProtocol.cpp",
    "frameworks/source/ingenic_oss_output.c",
  ]
  include_dirs = [
    "//foundation/communication/bluetooth/interfaces/innerkits/native_c/include",
    "include/utils",
    "include/bt",
    "include/bt/app_common",
    "include/bt/protocol",
    "include/bt/ble",
    "include/bt/incall",
    "include/bt/module",
    "include/bt/module/ios",
    "include/libbsa",
    "include",
    "frameworks/sdk",
  ]
  ldflags = [
    "-lstdc++",
    "-lrt",
    "-lpthread",
    "-lasound",
    "-lm",
    "-lc",
    "-lbsa",
    "-Wl,-rpath-link=$rpath",
    "-L$device_path/../hardware/hals/communication/bluetooth/frameworks/lib",
  ]
  cflags = [
    "-Wall",
    "-fpermissive",
    "-fPIC",
    "-std=gnu++11",
    "-DUSE_INGENIC_AUDIO_SOCKET",
    "-DBLUETOOTH_HILINK_SUPPORT",
    "-DBLE_INCLUDED=true",
    "-DBUILDCFG",
    "-DAPP_TRACE_COLOR",
    "-DALSA_SUPPORT=true",
  ]
  cflags_cc = cflags
}
shared_library("BluetoothSDK") {
  sources = [
    "frameworks/sdk/BluetoothController.cpp",
    "frameworks/sdk/ThirdPartyModule.cpp",
    "frameworks/sdk/HilinkModule.cpp",
    "frameworks/protocol/SyncData.cpp",
    "frameworks/protocol/SyncDataTools.cpp",
  ]
  include_dirs = [
    "//foundation/communication/bluetooth/interfaces/innerkits/native_c/include",
    "include/utils",
    "include/bt",
    "include/bt/app_common",
    "include/bt/protocol",
    "include/bt/ble",
    "include/bt/incall",
    "include/bt/module",
    "include/bt/module/ios",
    "include/libbsa",
    "frameworks/sdk",
    "include",
  ]
  ldflags = [
    "-lstdc++",
    "-lrt",
    "-lpthread",
    "-lm",
    "-lc",
    "-Wl,-rpath-link=$rpath",
    "-L$device_path/../hardware/hals/communication/bluetooth/frameworks/lib",
  ]
  cflags = [
    "-Wall",
    "-fpermissive",
    "-fPIC",
    "-DBLUETOOTH_HILINK_SUPPORT",
    "-D_GNU_SOURCE=1",
    "-DHAVE_PTHREADS",
    "-DHAVE_ANDROID_OS",
    "-D_FILE_OFFSET_BITS=64",
  ]
  cflags_cc = cflags
  deps = [
    ":btservice"
  ]
}
